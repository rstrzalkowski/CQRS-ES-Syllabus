version: '3.8'
name: syllabus
services:
  axonserver:
    container_name: axonserver
    hostname: axonserver
    image: axoniq/axonserver:2024.0.2
    environment:
      - AXONIQ_AXONSERVER_DEVMODE_ENABLED=true
    ports:
      - '8024:8024'
      - '8124:8124'
      - '8224:8224'
    networks:
      - axon

  postgres-lookup-db:
    container_name: postgres-lookup
    image: postgres:15
    environment:
      POSTGRES_DB: lookup_db
      POSTGRES_USER: lookup_user
      POSTGRES_PASSWORD: lookup_password
    ports:
      - "15432:5432"
    networks:
      - write

  postgres-read:
    container_name: postgres-read
    image: postgres:15
    environment:
      POSTGRES_DB: read_db
      POSTGRES_USER: read_user
      POSTGRES_PASSWORD: read_password
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - read

  postgres-keycloak:
    container_name: postgres-keycloak
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: keycloak_password
    networks:
      - keycloak

  keycloak:
    container_name: keycloak
    depends_on:
      - postgres-keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres-keycloak
      DB_DATABASE: keycloak_db
      DB_USER: keycloak_user
      DB_PASSWORD: keycloak_password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    image: keycloak/keycloak:23.0.1
    ports:
      - "18080:8080"
    volumes:
      - ./backend/external-realm.json:/opt/keycloak/data/import/external-realm.json
    command: start-dev --import-realm
    networks:
      - keycloak

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx-conf:/etc/nginx
      - ./frontend/dist/frontend:/usr/share/nginx/html
    ports:
      - "80:80"
    networks:
      - read
      - write

  read-1:
    container_name: read-1
    hostname: read-1
    depends_on:
      - axonserver
      - postgres-keycloak
      - postgres-read
    build:
      context: backend
      dockerfile: read.Dockerfile
    ports:
      - "8000:8080"
    networks:
      - axon
      - keycloak
      - read

  read-2:
    container_name: read-2
    hostname: read-2
    depends_on:
      - axonserver
      - postgres-keycloak
      - postgres-read
    build:
      context: backend
      dockerfile: read.Dockerfile
    ports:
      - "8001:8080"
    networks:
      - axon
      - keycloak
      - read

  write:
    container_name: write
    hostname: write
    depends_on:
      - axonserver
      - postgres-keycloak
      - postgres-lookup-db
    build:
      context: backend
      dockerfile: write.Dockerfile
    ports:
      - "9000:8080"
    networks:
      - axon
      - keycloak
      - write

volumes:
  axonserver-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data
      o: bind
  axonserver-events:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/events
      o: bind
  axonserver-config:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/config
      o: bind
  postgres:

networks:
  axon:
  keycloak:
  write:
  read:
version: '3.8'
name: syllabus
services:
  axonserver:
    container_name: axonserver
    hostname: axonserver
    image: axoniq/axonserver:2024.0.2
    environment:
      - AXONIQ_AXONSERVER_DEVMODE_ENABLED=true
      - AXONIQ_AXONSERVER_STANDALONE=true
    ports:
      - '8024'
      - '8124'
      - '8224'
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8024/actuator/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - axon

  postgres-lookup-db:
    container_name: postgres-lookup
    image: postgres:15
    environment:
      POSTGRES_DB: lookup_db
      POSTGRES_USER: lookup_user
      POSTGRES_PASSWORD: lookup_password
    ports:
      - "5432"
    volumes:
      - postgres-lookup:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - write

  postgres-read:
    container_name: postgres-read
    image: postgres:15
    environment:
      POSTGRES_DB: read_db
      POSTGRES_USER: read_user
      POSTGRES_PASSWORD: read_password
    ports:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - postgres-read:/var/lib/postgresql/data
    networks:
      - read

  postgres-keycloak:
    container_name: postgres-keycloak
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak_db
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: keycloak_password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - postgres-keycloak:/var/lib/postgresql/data
    networks:
      - keycloak

  keycloak:
    container_name: keycloak
    depends_on:
      postgres-keycloak:
        condition: service_healthy
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres-keycloak
      DB_DATABASE: keycloak_db
      DB_USER: keycloak_user
      DB_PASSWORD: keycloak_password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    image: keycloak/keycloak:23.0.1
    ports:
      - "8080"
    volumes:
      - ./backend/external-realm.json:/opt/keycloak/data/import/external-realm.json
    command: start-dev --import-realm
    healthcheck:
      test: [ "CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'" ]
      interval: 30s
      timeout: 5s
      retries: 20
    networks:
      - keycloak

  nginx:
    container_name: nginx
    depends_on:
      read-1:
        condition: service_healthy
      read-2:
        condition: service_healthy
      write:
        condition: service_healthy
    image: nginx:latest
    volumes:
      - ./nginx-conf:/etc/nginx
      - ./frontend/dist/frontend:/usr/share/nginx/html
    ports:
      - "80:80"
    networks:
      - gateway

  read-1:
    container_name: read-1
    hostname: read-1
    depends_on:
      axonserver:
        condition: service_healthy
      postgres-read:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    build:
      context: backend
      dockerfile: read.Dockerfile
    ports:
      - "8080"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - axon
      - keycloak
      - read
      - gateway

  read-2:
    container_name: read-2
    hostname: read-2
    depends_on:
      axonserver:
        condition: service_healthy
      postgres-read:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    build:
      context: backend
      dockerfile: read.Dockerfile
    ports:
      - "8080"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - axon
      - keycloak
      - read
      - gateway

  write:
    container_name: write
    hostname: write
    depends_on:
      axonserver:
        condition: service_healthy
      postgres-lookup-db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    build:
      context: backend
      dockerfile: write.Dockerfile
    ports:
      - "8080"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - axon
      - keycloak
      - write
      - gateway

volumes:
  axonserver-data:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data
      o: bind
  axonserver-events:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/events
      o: bind
  axonserver-config:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/config
      o: bind
  postgres-read:
  postgres-lookup:
  postgres-keycloak:

networks:
  axon:
  keycloak:
  write:
  read:
  gateway: